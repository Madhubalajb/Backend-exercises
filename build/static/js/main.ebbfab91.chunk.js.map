{"version":3,"sources":["Images/phone-book.png","services/phonebook.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","url","phonebook","axios","get","then","response","data","person","post","person_id","delete","concat","put","Persons","props","react_default","a","createElement","func","PersonForm","Form","onSubmit","add","Row","Col","sm","Control","onChange","placeholder","required","number","Button","className","type","Filter","filters","Notification","msg","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newPerson","setNewPerson","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","message","setMessage","useEffect","personServices","showMessage","setTimeout","filteredItems","contact","name","toLowerCase","indexOf","components_Notification","src","logo","alt","Badge","components_Filter","event","target","value","Card","components_PersonForm","preventDefault","some","per","window","confirm","update","find","updateObject","objectSpread","id","updated","map","pp","Alert","variant","catch","error","length","returnedPersons","components_Persons","key","onClick","deleted","href","rel","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebbfab91.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/phone-book.55d8da50.png\";","import axios from 'axios';\r\nconst url = '/api/persons'\r\n\r\nconst getData = () => {\r\n    const request = axios.get(url);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst addData = (person) => {\r\n    const request = axios.post(url, person);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteData = (person_id) => {\r\n    const request = axios.delete(`${url}/${person_id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updateData = (person_id, person) => {\r\n    const request = axios.put(`${url}/${person_id}`, person);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getData, addData, deleteData, updateData }","import React from 'react';\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <div>{props.func}</div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React from 'react'\r\nimport { Button, Form, Col, Row } from 'react-bootstrap'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.add}>\r\n            <Row>\r\n                <Col>Name</Col>\r\n                <Col sm=\"8\">\r\n                    <Form.Control onChange={props.person} placeholder=\"Contact Name\" required />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>Number</Col>\r\n                <Col sm=\"8\">\r\n                    <Form.Control onChange={props.number} placeholder=\"Phone Number\" required />\r\n                </Col>\r\n            </Row>\r\n            <Button className='btn btn-sm' type='submit'>Add</Button>\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <Form>\r\n            <Col sm=\"3\">\r\n                <Form.Control className=\"filter\" onChange={props.filters} placeholder=\"Search Contacts ...\" />\r\n            </Col>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst Notification = (props) => {\r\n    if(props.msg === null) {\r\n        return null\r\n    }\r\n    return (\r\n        props.msg\r\n    )\r\n}\r\n\r\nexport default Notification;","\nimport React, {useState, useEffect} from 'react'\nimport personServices from './services/phonebook'\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter';\nimport Notification from './components/Notification'\nimport { Button, Card, Alert, Badge} from 'react-bootstrap'\nimport logo from './Images/phone-book.png'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newPerson, setNewPerson] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState(''); \n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n     personServices.getData().then(persons => {setPersons(persons)})\n  }, [])\n\n  const showMessage = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const check = persons.some(per => per.name === newPerson)\n    if (!check) {\n      const person = {\n        name: newPerson,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personServices\n      .addData(person)\n      .then(returnedPersons => {\n        setPersons(persons.concat(returnedPersons))\n        showMessage(<Alert variant=\"success\">Added contact {newPerson}</Alert>)\n        setNewPerson('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        showMessage(<Alert variant=\"warning\">Person validation failed: Name & Number should be a length of minimum 3, 8 respectively. </Alert>)\n      })\n    }\n    else {\n      let check = window.confirm(`${newPerson} is already added to phonebook, replace the old number with the new one?`)\n      if(check) {\n        const update = persons.find(p => p.name === newPerson)\n        const updateObject = { ...update, number: newNumber}\n        personServices\n        .updateData(updateObject.id, updateObject)\n        .then(updated => {\n          setPersons(persons.map(pp => pp.id !== updateObject.id ? pp : updated))\n          showMessage(<Alert variant=\"success\">Updated contact {updateObject.name}</Alert>)\n        })\n        .catch(error => {\n          showMessage(<Alert variant=\"warning\">Person ${newPerson} has already been deleted</Alert>)\n        })\n      }\n    }\n  }\n\n  const removePerson = (person) => {\n    let check = window.confirm(`Delete ${person.name} ?`)\n    if(check) {\n      personServices\n      .deleteData(person.id)\n      .then(deleted => {\n        setPersons(persons.filter(per => per.id !== person.id))\n        showMessage(<Alert variant=\"success\">Deleted contact {person.name}</Alert>)\n      })\n      .catch(error => {\n        showMessage(<Alert variant=\"warning\">Person ${newPerson} has already been deleted</Alert>)\n      })\n    }\n  }\n\n  const handleNewPerson = (event) => setNewPerson(event.target.value)\n\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n\n  const handleFilter = (event) => setFilter(event.target.value)\n\n  let filteredItems = persons.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n\n  const phoneBook  = () => filteredItems.map(per => \n      <p key={per.id}>\n        {per.name}: {per.number} <Button className = \"btn btn-sm\" onClick={() => {removePerson(per)}}>Delete</Button>\n      </p>);\n\n  return (\n    <center className = \"container\">\n      <Notification msg = {message} />\n      <div>\n        <div>\n          <img src={logo} alt=\"Logo\" />\n          <h2>Phonebook App</h2>\n        </div>\n        <p><Badge>React JS</Badge> + <Badge>Node JS</Badge> + <Badge>REST API</Badge> + <Badge>Express</Badge> + <Badge>MongoDB</Badge> + <Badge>SASS</Badge> + <Badge>Bootstrap</Badge></p>\n        <Filter filters = {handleFilter} />\n      </div>\n      <div className = \"row main-row\">\n        <Card className = \"col-sm-6\">\n          <h2>Add a contact</h2>\n          <PersonForm add = {addPerson} person = {handleNewPerson} number = {handleNewNumber} />\n        </Card>\n        <Card className = \"col-sm-6\">\n          <h2>Numbers ...</h2>\n          <Persons func = {phoneBook()} />\n        </Card>\n      </div>\n      <p className=\"footer\">designed & developed by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a> \n        <br/> On live since 28th June 2019</p>\n    </center>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}