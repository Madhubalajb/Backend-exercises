{"version":3,"sources":["services/phoneService.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/Login.js","components/Signup.js","services/login.js","services/signup.js","components/UserService.js","components/Navigation.js","App.js","serviceWorker.js","index.js","Images/phone-book.png"],"names":["url","token","phoneService","setToken","newToken","concat","getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","addData","_ref2","_callee2","person","config","_context2","headers","Authorization","post","_x","deleteData","_ref3","_callee3","person_id","_context3","delete","_x2","updateData","_ref4","_callee4","_context4","put","_x3","_x4","Persons","props","filteredItems","react_default","createElement","map","per","key","id","className","name","number","Button","onClick","removePerson","class","PersonForm","Form","onSubmit","add","Row","Col","sm","Control","onChange","value","newPerson","placeholder","required","newNumber","type","Filter","filters","Notification","msg","Login","Modal","show","onHide","close","Header","closeButton","Body","login","username","pwd","Signup","signup","services_login","credentials","services_signup","Userservice","_useState","useState","_useState2","slicedToArray","loginModal","setLoginModal","handleLoginNoModal","_useState3","_useState4","signupModal","setSignupModal","handleSignupNoModal","_useState5","_useState6","user","setUser","_useState7","_useState8","setName","_useState9","_useState10","setUsername","_useState11","_useState12","password","setPassword","useEffect","loggedUser","window","localStorage","getItem","JSON","parse","handleUsername","event","target","handlePassword","handleLogin","preventDefault","loginService","then","setItem","stringify","catch","error","location","reload","handleSignup","signupService","savedUser","Nav","Link","components_Login","components_Signup","removeItem","Navigation","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","UserService","App","persons","setPersons","setNewPerson","setNewNumber","filter","setFilter","message","setMessage","personServices","showMessage","setTimeout","contact","toLowerCase","indexOf","components_Navigation","components_Notification","src","logo","alt","Badge","components_Filter","Card","components_PersonForm","some","confirm","update","find","p","updateObject","objectSpread","updated","pp","Alert","variant","length","returnedPersons","components_Persons","remove","deleted","rel","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.947e72db.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst url = '/api/persons'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getData = async () => {\r\n    const response = await axios.get(url)\r\n    return response.data\r\n}\r\n\r\nconst addData = async (person) => {\r\n    const config = {\r\n        headers: { Authorization: token }\r\n    }\r\n    const response = await axios.post(url, person, config)\r\n    return response.data\r\n}\r\n\r\nconst deleteData = async (person_id) => {\r\n    const response = await axios.delete(`${url}/${person_id}`)\r\n    return response.data\r\n}\r\n\r\nconst updateData = async (person_id, person) => {\r\n    const response = await axios.put(`${url}/${person_id}`, person);\r\n    return response.data\r\n}\r\n\r\nexport default { setToken, getData, addData, deleteData, updateData }","import React from 'react'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nconst Persons = (props) => {\r\n    const filteredItems = props.filteredItems\r\n\r\n    const phoneBook  = () => filteredItems.map(per => \r\n        <p key={per.id}> <i className=\"material-icons\">person</i>\r\n            {per.name}: {per.number} \r\n            <Button className = \"btn btn-sm\" onClick={() => {props.removePerson(per)}}>\r\n              <i class=\"material-icons\">remove_circle</i>\r\n            </Button>\r\n        </p>)\r\n  \r\n    return (\r\n        <div>{phoneBook()}</div>\r\n    )\r\n}\r\n\r\nexport default Persons;","import React from 'react'\r\nimport { Button, Form, Col, Row } from 'react-bootstrap'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.add}>\r\n            <Row>\r\n                <Col sm=\"2\">\r\n                    <i className=\"material-icons\">person_add</i>\r\n                </Col>\r\n                <Col sm=\"10\">\r\n                    <Form.Control onChange={props.person} value={props.newPerson || ''} placeholder=\"Contact Name\" required />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm=\"2\">\r\n                    <i className=\"material-icons\">phone</i>\r\n                </Col>\r\n                <Col sm=\"10\">\r\n                    <Form.Control onChange={props.number} value={props.newNumber || ''} placeholder=\"Phone Number\" required />\r\n                </Col>\r\n            </Row>\r\n            <Button className='btn-sm btn_icon' type='submit'><\r\n                i className=\"material-icons\">add_circle</i>\r\n                <span>Add</span>\r\n            </Button>\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <Form>\r\n            <Col sm=\"3\">\r\n                <Form.Control className=\"filter\" onChange={props.filters} placeholder=\"Search Contacts ...\" />\r\n            </Col>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst Notification = (props) => {\r\n    if(props.msg === null) {\r\n        return null\r\n    }\r\n    return (\r\n        props.msg\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\nimport {Modal, Button, Form} from 'react-bootstrap'\r\n\r\nconst Login = (props) => {\r\n return (\r\n     <Modal show={props.show} onHide={props.close}>\r\n         <Modal.Header closeButton><b>Login</b></Modal.Header>\r\n         <Modal.Body>\r\n             <Form onSubmit={props.login}>\r\n                 <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required/>\r\n                 <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required />\r\n                 <center><Button type=\"submit\">Login</Button></center>\r\n             </Form>\r\n         </Modal.Body>\r\n     </Modal>\r\n )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport {Modal, Button, Form} from 'react-bootstrap'\r\n\r\nconst Signup = (props) => {\r\n    return (\r\n        <Modal show={props.show} onHide={props.close}>\r\n            <Modal.Header closeButton>Sign Up</Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.signup}>\r\n                    <Form.Control type=\"text\" placeholder=\"Name\" onChange={props.name} required/>\r\n                    <Form.Control type=\"text\" placeholder=\"Username\" onChange={props.username} required/>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={props.pwd} required/>\r\n                    <center><Button type=\"submit\">Signup</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Signup","import axios from 'axios'\r\nconst url = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst url = '/api/users'\r\n\r\nconst signup = async (credentials) => {\r\n    const response = await axios.post(url, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { signup }","import React, {useState, useEffect} from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport LoginModal from './Login'\r\nimport SignupModal from './Signup'\r\nimport loginService from '../services/login'\r\nimport signupService from '../services/signup'\r\nimport phoneService from '../services/phoneService'\r\n\r\nconst Userservice = () => {\r\n    const [loginModal, setLoginModal] = useState(false)\r\n    const handleLoginModal = () => setLoginModal(true)\r\n    const handleLoginNoModal = () => setLoginModal(false)\r\n\r\n    const [signupModal, setSignupModal] = useState(false)\r\n    const handleSignupModal = () => setSignupModal(true)\r\n    const handleSignupNoModal = () => setSignupModal(false)\r\n    \r\n    const [user, setUser] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    useEffect(() => {\r\n        const loggedUser = window.localStorage.getItem('logged_PhoneApp_User')\r\n        if(loggedUser) {\r\n            const user = JSON.parse(loggedUser)\r\n            setUser(user)\r\n            phoneService.setToken(user.token)\r\n        }\r\n    }, []) \r\n\r\n    const handleName = (event) => setName(event.target.value)\r\n    const handleUsername = (event) => setUsername(event.target.value)\r\n    const handlePassword = (event) => setPassword(event.target.value)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        await loginService.login({\r\n            username, password\r\n        })\r\n        .then(user => {\r\n            window.localStorage.setItem('logged_PhoneApp_User', JSON.stringify(user))\r\n            phoneService.setToken(user.token)\r\n            setUser(user)\r\n            setUsername('')\r\n            setPassword('')\r\n            handleLoginNoModal()\r\n        })\r\n        .catch(error => {\r\n            setUser('')\r\n            setUsername('')\r\n            setPassword('')\r\n            handleLoginNoModal()\r\n        })\r\n        window.location.reload(false)\r\n    }\r\n\r\n    const handleSignup = async (event) => {\r\n        event.preventDefault()\r\n        await signupService.signup({\r\n            name, username, password\r\n        })\r\n        .then(savedUser => {\r\n            setUser('')\r\n            setName('')\r\n            setUsername('')\r\n            setPassword('')\r\n            handleSignupNoModal()\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser('')\r\n        window.localStorage.removeItem('logged_PhoneApp_User')\r\n        phoneService.setToken('')\r\n        window.location.reload(false)\r\n    }\r\n\r\n    if(user === '') {\r\n        return (\r\n            <div>\r\n                <Nav.Link onClick={handleLoginModal}>Login</Nav.Link>\r\n                <LoginModal show={loginModal} close={handleLoginNoModal} username={handleUsername} pwd={handlePassword} login={handleLogin}/>\r\n\r\n                <Nav.Link onClick={handleSignupModal}>Signup</Nav.Link>\r\n                <SignupModal show={signupModal} close={handleSignupNoModal} name={handleName} username={handleUsername} pwd={handlePassword} signup={handleSignup}/>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n                <Nav.Link onClick={logout}>Logout</Nav.Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Userservice","import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport UserService from './UserService'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"sm\" className=\"fixed-top\">\r\n            <Navbar.Brand href=\"/about\">about</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <UserService />\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React, {useState, useEffect} from 'react'\nimport {Card, Alert, Badge, Row, Col} from 'react-bootstrap'\nimport personServices from './services/phoneService'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport Navigation from './components/Navigation'\nimport logo from './Images/phone-book.png'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newPerson, setNewPerson] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('logged_PhoneApp_User')\n    if(loggedUser) {\n      personServices.getData()\n      .then(persons => setPersons(persons.filter(person => person.user.id === JSON.parse(loggedUser).id)))\n    }\n  }, [])\n\n  const showMessage = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const check = persons.some(per => per.name === newPerson)\n    if (!check) {\n      const person = {\n        name: newPerson,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personServices\n      .addData(person)\n      .then(returnedPersons => {\n        setPersons(persons.concat(returnedPersons))\n        showMessage(<Alert variant=\"success\">Added contact {newPerson}</Alert>)\n        setNewPerson('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        showMessage(<Alert variant=\"warning\">Person validation failed: Name & Number should be a length of minimum 3, 8 respectively. </Alert>)\n        setNewPerson('')\n        setNewNumber('')\n      })\n    }\n    else {\n      let check = window.confirm(`${newPerson} is already exists, do you want to replace the number?`)\n      if(check) {\n        const update = persons.find(p => p.name === newPerson)\n        const updateObject = { ...update, number: newNumber}\n        personServices\n        .updateData(updateObject.id, updateObject)\n        .then(updated => {\n          setPersons(persons.map(pp => pp.id !== updateObject.id ? pp : updated))\n          showMessage(<Alert variant=\"success\">Updated contact {updateObject.name}</Alert>)\n          setNewNumber('')\n          setNewPerson('')\n        })\n        .catch(error => {\n          showMessage(<Alert variant=\"warning\">Person ${newPerson} has already been deleted</Alert>)\n          setNewPerson('')\n          setNewNumber('')\n        })\n      }\n    }\n  }\n\n  const removePerson = (person) => {\n    let check = window.confirm(`Wanna delete ${person.name}?`)\n    if(check) {\n      personServices\n      .deleteData(person.id)\n      .then(deleted => {\n        setPersons(persons.filter(per => per.id !== person.id))\n        showMessage(<Alert variant=\"success\">Deleted contact {person.name}</Alert>)\n      })\n      .catch(error => {\n        showMessage(<Alert variant=\"warning\">Person ${newPerson} has already been deleted</Alert>)\n      })\n    }\n  }\n\n  const handleNewPerson = (event) => setNewPerson(event.target.value)\n\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n\n  const handleFilter = (event) => setFilter(event.target.value)\n\n  let filteredItems = persons.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n\n  return (\n    <center className = \"container\">\n      <Navigation />\n      <Notification msg = {message} />\n\n      <div>\n        <div>\n          <img src={logo} alt=\"Logo\" />\n          <h2>Phonebook App</h2>\n        </div>\n        <p><Badge>React JS</Badge> + <Badge>Node JS</Badge> + <Badge>REST API</Badge> + <Badge>Express</Badge> + <Badge>MongoDB</Badge> + <Badge>SASS</Badge> + <Badge>Bootstrap</Badge></p>\n        <Filter filters = {handleFilter} />\n      </div>\n\n      <div className = \"row main-row\">\n        <Card className = \"col-sm-6\">\n          <h2>Add a contact</h2>\n          <PersonForm add = {addPerson} person = {handleNewPerson} number = {handleNewNumber} newNumber={newNumber} newPerson={newPerson}/>\n        </Card>\n\n        <Card className = \"col-sm-6\">\n          <Row>\n            <Col><h2>Contacts</h2></Col>\n            <Col><i className=\"material-icons\">contact_phone</i></Col>\n          </Row>\n          <Persons filteredItems={filteredItems} remove={removePerson} />\n        </Card>\n      </div>\n\n      <p className=\"footer\">designed & developed by <a href=\"https://madhubalajb.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\">madhubala jayakumaran</a> \n        <br/> On live since 28th June 2019</p>\n    </center>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/phone-book.55d8da50.png\";"],"sourceRoot":""}